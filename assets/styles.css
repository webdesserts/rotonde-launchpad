*, *::before, *::after {
  box-sizing: border-box;
}

:root {
  --font-regular: 'input_mono_regular', monospace;
  --font-medium: 'input_mono_medium', monospace;
  --font-thin: 'input_mono_thin', monospace;
  --black: #222;
  --grey: #aaa;
  --white: #fcfcfc;
  --red: #d95270;

  color: var(--black);
  font-family: var(--font-regular);

  font-size: 100%;
}

:root, body {
  background-color: var(--white);
}

h1 {
  font-family: var(--font-medium);
  font-size: 4rem;
}

p {
  margin: 1rem 0;
}

a[href] {
  font-weight: 600;
  text-decoration: underline;
}

#landing-page h1 {
  text-align: center;
}

#landing-page p {
  text-align: center;
  max-width: 30rem;
}

.pane {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  overflow: auto;
}

.pane > *+* {
  margin-top: 1rem;
}

.pane--active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 400ms 400ms ease, transform 400ms 400ms ease;
  z-index: 1;
}

.pane:not(.pane--active) {
  opacity: 0;
  transition: opacity 500ms ease, transform 400ms 100ms ease;
}

.pane--fade-left:not(.pane--active) {
  transform: translateX(-1rem); 
}
.pane--fade-right:not(.pane--active) {
  transform: translateX(1rem);
}

.pane-view {
  overflow: hidden;
  transition: margin 700ms 200ms ease;
  position: relative;
  height: 100vh;
  width: 100vw;
}

.field input[type="text"] {
  width: 100%;
  height: 3rem;
  border-bottom: var(--grey) solid .125rem;
  background-color: transparent;
  cursor: text;
  transition: border-color 200ms ease;
}

.field input[type="text"]:focus {
  border-color: var(--black);
}

.field input[type="text"]::placeholder {
  color: var(--grey);
}

.field {
  width: 20rem;
}

.field[data-invalid] input[type="text"] {
  border-color: var(--red);
}

.field[data-help]::after,
.field[data-invalid]::after
{
  display: block;
  margin-top: .25rem;
  font-size: .8em;
}

.field[data-help]::after {
  content: attr(data-help);
  color: var(--grey);
}

.field[data-invalid]::after {
  content: attr(data-invalid);
  color: var(--red);
}

.field.avatar {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
}
.field.avatar[data-invalid] label {
  border-color: var(--red)
}

.field.avatar input[type="file"] {
  display: none;
}

.field.avatar label {
  position: relative;
  height: 11.75rem;
  width: 10rem;
  padding: .125rem .125rem 1.75rem;
  border: .125rem dashed var(--grey);
  cursor: pointer;
  transition: border-color 200ms ease;
}

.field.avatar img {
  max-width: 100%;
  max-height: 10rem;
}

.field.avatar label:hover:not(:active),
.field.avatar label:focus:not(:active) {
  border-color: var(--black);
}

.field.avatar label:hover:not(:active)::after,
.field.avatar label:focus:not(:active)::after {
  background-color: var(--black)
}

.field.avatar label::after {
  position: absolute;
  height: 1.5rem;
  bottom: .125rem;
  left: .125rem;
  right: .125rem;
  line-height: 1.5rem;
  background-color: var(--grey);
  color: var(--white);
  content: "change";
  text-align: center;
  transition: background-color 200ms ease;
}

.button,
.icon-button {
  cursor: pointer;
}

.button {
  padding: .5rem 1rem;
  background-color: var(--black);
  color: var(--white);
  border: .125rem solid var(--white);
  outline: .125rem solid transparent;
  transition: outline-color 200ms ease;
}

.button:focus:not(:active),
.button:hover:not(:active){
  outline-color: var(--black);
}

.icon-button {
  width: 2rem;
  height: 2rem;
  background-color: var(--white);
  color: var(--black);
  border-radius: 50%;
  border: .125rem solid var(--white);
  transition: border-color 200ms ease;
}

.icon-button img {
  fill: var(--black);
  width: 100%;
  height: 100%;
}

.icon-button:hover:not(:active),
.icon-button:focus:not(:active) {
  border-color: var(--black)
}

#close {
  position: absolute;
  top: 2rem;
  left: 2rem;
  margin: 0;
}
